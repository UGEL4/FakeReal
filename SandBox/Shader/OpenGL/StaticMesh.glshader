#type vertex
#version 430 core
#extension GL_ARB_enhanced_layouts: enable
layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 texCoord;

layout (std140, binding = 0) uniform Camera
{
	mat4 g_ViewProjection;
};

uniform mat4 worldMat;

struct OutPut
{
	vec2 texCoord;
};

out OutPut v_out;
void main()
{
	gl_Position = g_ViewProjection * worldMat * vec4(position, 1.0);
	v_out.texCoord = texCoord;
}

#type fragment
#version 430 core

struct OutPut
{
	vec2 texCoord;
};

struct Material {
	sampler2D texture_diffuse1;
	sampler2D texture_diffuse2;
	sampler2D texture_diffuse3;
	sampler2D texture_specular1;
	sampler2D texture_specular2;
	sampler2D texture_normal1;
	sampler2D texture_normal2;
	sampler2D texture_height1;
	sampler2D texture_height2;
	//¾µÃæ·´Éä°ë¾¶
	float shininess;
};

uniform Material m_Material;

in OutPut v_out;
out vec4 color;
void main()
{
   color = vec4(texture2D(m_Material.texture_diffuse1, v_out.texCoord));
}